(* ::Package:: *)

dir = DirectoryName[$InputFileName]; 
ImportPaths = FileNameJoin[{dir, "..", "Paths.m"}]; 
Get[ImportPaths]; 
$LoadFeynArts = $LoadPhi = False; 
Get[FeyncalcDirectory]; 
Get[FeynArtsFeynCalcToolsDirectory];
SetOptions[OneLoop,ReduceGamma->True];
p1 = p3+p4;
mIn1=Mh0;
mOut1=ML;
mOut2=ML;
Pair[Momentum[p1],Momentum[p3]] = (mIn1^2+mOut1^2-mOut2^2)/2;
Pair[Momentum[p3],Momentum[p1]] = (mIn1^2+mOut1^2-mOut2^2)/2;
Pair[Momentum[p1],Momentum[p4]] = (mIn1^2-mOut1^2+mOut2^2)/2;
Pair[Momentum[p4],Momentum[p1]] = (mIn1^2-mOut1^2+mOut2^2)/2;
Pair[Momentum[p3],Momentum[p4]] = (mIn1^2-mOut1^2-mOut2^2)/2;
Pair[Momentum[p4],Momentum[p3]] = (mIn1^2-mOut1^2-mOut2^2)/2;
ScalarProduct[p1,p1] = mIn1^2;
ScalarProduct[p3,p3] = mOut1^2;
ScalarProduct[p4,p4] = mOut2^2;
Pair[Momentum[p1],Momentum[p1]] = mIn1^2;
Pair[Momentum[p3],Momentum[p3]] = mOut1^2;
Pair[Momentum[p4],Momentum[p4]] = mOut2^2;
ampList=FileNames["*.txt",{FileNameJoin[{dir, "..", "Temp", "procDepAlpha2"}]}];
exportFortran = "";
exportFortran = exportFortran <> "double complex function h0toTauPTauMProcDepVC()\n";
exportFortran = exportFortran <> " use constants\n";
exportFortran = exportFortran <> " implicit none\n";
exportFortran = exportFortran <> "#include \"looptools.h\"\n";
exportFortran = exportFortran <> " integer :: j\n";
exportFortran = exportFortran <> " double complex :: totalAmplitude\n";
exportFortran = exportFortran <> " double complex :: amplitudes("<>ToString[Length[ampList]]<>")\n\n";
For[i=1,i<=Length[ampList],i++,
	Print["Calculating amplitude " <> ToString[i] <> " ..."];
	ImportFile = ampList[[i]]; 
	amp = ToExpression[Import[ImportFile]]; 
	tracer = DiracSimplify2[amp]; 
	simpler = OneLoopSimplify[tracer, l]; 
	oneloop = OneLoop[l, simpler]; 
	export = Simplify[(oneloop/.{StandardMatrixElement[_]:>1})/(-EL*ML*Yuk4/(2*MW*SW))];
	exportFortran = exportFortran<>feyncalcToFortran[export," amplitudes("<>ToString[i]<>") = "]<>"\n\n";
	Print["Amplitude " <> ToString[i] <> " done."];
];
exportFortran=exportFortran<>"  totalAmplitude = (0D0,0D0)\n";
exportFortran=exportFortran<>" do j=1,"<>ToString[Length[ampList]]<>"\n";
exportFortran=exportFortran<>"  totalAmplitude = totalAmplitude + amplitudes(j)\n";
exportFortran=exportFortran<>" end do\n\n";
exportFortran=exportFortran<>"h0toTauPTauMProcDepVC = totalAmplitude\n";
exportFortran=exportFortran<>"end function h0toTauPTauMProcDepVC";
filename = FileNameJoin[{dir, "..", "BuildingBlocks", "ProcessDependentScheme", "h0toTauPTauMProcDepVC.txt"}];
Export[filename, exportFortran]; 
If[FileExistsQ[StringReplace[filename,".txt"->".F90"]],DeleteFile[StringReplace[filename,".txt"->".F90"]];];
RenameFile[filename,StringReplace[filename,".txt"->".F90"]];
Exit[];
